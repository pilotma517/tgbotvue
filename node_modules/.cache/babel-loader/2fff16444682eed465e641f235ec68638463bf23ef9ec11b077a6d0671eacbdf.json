{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'DemoView',\n  data: function data() {\n    return {\n      selectedCoin: 'ETH',\n      selectedRange: '24H',\n      coins: [{\n        id: 'ETH',\n        name: '以太坊'\n      }, {\n        id: 'BTC',\n        name: '比特币'\n      }, {\n        id: 'BNB',\n        name: '币安币'\n      }],\n      timeRanges: ['24H', '7D', '30D', '1Y'],\n      alertPrice: '',\n      alertCondition: 'above',\n      activeAlerts: [{\n        id: 1,\n        coin: 'ETH',\n        condition: '高于',\n        price: '2000'\n      }, {\n        id: 2,\n        coin: 'BTC',\n        condition: '低于',\n        price: '35000'\n      }],\n      walletAddress: '',\n      monitoredWallets: [{\n        address: '0x742d35Cc6634C0532925a3b844Bc454e4438f44e',\n        balance: '125.45',\n        recentTx: [{\n          hash: '0x123...',\n          type: 'in',\n          amount: '10.5',\n          time: '10分钟前'\n        }, {\n          hash: '0x456...',\n          type: 'out',\n          amount: '5.2',\n          time: '1小时前'\n        }]\n      }],\n      botCommand: '',\n      botMessages: [{\n        id: 1,\n        type: 'system',\n        text: '欢迎使用 BlockAlert Bot!',\n        time: '12:00'\n      }, {\n        id: 2,\n        type: 'user',\n        text: '/price ETH',\n        time: '12:01'\n      }, {\n        id: 3,\n        type: 'bot',\n        text: 'ETH 当前价格: $1,850.45',\n        time: '12:01'\n      }],\n      botCommands: [{\n        cmd: '/price <币种>',\n        description: '查询当前价格'\n      }, {\n        cmd: '/alert <币种> <价格>',\n        description: '设置价格提醒'\n      }, {\n        cmd: '/wallet <地址>',\n        description: '查询钱包信息'\n      }]\n    };\n  },\n  methods: {\n    setAlert: function setAlert() {\n      if (!this.alertPrice) return;\n      this.activeAlerts.push({\n        id: Date.now(),\n        coin: this.selectedCoin,\n        condition: this.alertCondition === 'above' ? '高于' : '低于',\n        price: this.alertPrice\n      });\n      this.alertPrice = '';\n    },\n    deleteAlert: function deleteAlert(id) {\n      this.activeAlerts = this.activeAlerts.filter(function (alert) {\n        return alert.id !== id;\n      });\n    },\n    addWallet: function addWallet() {\n      if (!this.walletAddress) return;\n      this.monitoredWallets.push({\n        address: this.walletAddress,\n        balance: '0.00',\n        recentTx: []\n      });\n      this.walletAddress = '';\n    },\n    sendCommand: function sendCommand() {\n      var _this = this;\n      if (!this.botCommand) return;\n      this.botMessages.push({\n        id: Date.now(),\n        type: 'user',\n        text: this.botCommand,\n        time: new Date().toLocaleTimeString()\n      });\n      // 模拟机器人回复\n      setTimeout(function () {\n        _this.botMessages.push({\n          id: Date.now(),\n          type: 'bot',\n          text: _this.generateBotResponse(_this.botCommand),\n          time: new Date().toLocaleTimeString()\n        });\n      }, 500);\n      this.botCommand = '';\n    },\n    generateBotResponse: function generateBotResponse(command) {\n      if (command.startsWith('/price')) {\n        return \"\".concat(command.split(' ')[1], \" \\u5F53\\u524D\\u4EF7\\u683C: $\").concat((Math.random() * 2000 + 1000).toFixed(2));\n      }\n      return '收到命令：' + command;\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedCoin","selectedRange","coins","id","timeRanges","alertPrice","alertCondition","activeAlerts","coin","condition","price","walletAddress","monitoredWallets","address","balance","recentTx","hash","type","amount","time","botCommand","botMessages","text","botCommands","cmd","description","methods","setAlert","push","Date","now","deleteAlert","filter","alert","addWallet","sendCommand","_this","toLocaleTimeString","setTimeout","generateBotResponse","command","startsWith","concat","split","Math","random","toFixed"],"sources":["src/views/DemoView.vue"],"sourcesContent":["<template>\r\n    <div class=\"demo-page\">\r\n      <!-- 演示页面头部 -->\r\n      <section class=\"demo-hero gradient-bg\">\r\n        <h1>实时演示</h1>\r\n        <p>体验我们的区块链监控系统</p>\r\n      </section>\r\n  \r\n      <!-- 价格监控演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>价格监控演示</h2>\r\n        <div class=\"price-monitor\">\r\n          <div class=\"chart-container\">\r\n            <div class=\"chart-header\">\r\n              <div class=\"coin-selector\">\r\n                <select v-model=\"selectedCoin\">\r\n                  <option v-for=\"coin in coins\" :key=\"coin.id\" :value=\"coin.id\">\r\n                    {{ coin.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div class=\"time-range\">\r\n                <button \r\n                  v-for=\"range in timeRanges\" \r\n                  :key=\"range\"\r\n                  :class=\"{ active: selectedRange === range }\"\r\n                  @click=\"selectedRange = range\"\r\n                >\r\n                  {{ range }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart\">\r\n              <!-- 这里可以集成实际的图表库，如 ECharts 或 Chart.js -->\r\n              <div class=\"chart-placeholder\">\r\n                价格走势图\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"price-alerts\">\r\n            <h3>价格提醒</h3>\r\n            <div class=\"alert-form\">\r\n              <div class=\"form-group\">\r\n                <label>价格阈值</label>\r\n                <input type=\"number\" v-model=\"alertPrice\" placeholder=\"输入价格\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>条件</label>\r\n                <select v-model=\"alertCondition\">\r\n                  <option value=\"above\">高于</option>\r\n                  <option value=\"below\">低于</option>\r\n                </select>\r\n              </div>\r\n              <button class=\"btn btn-primary\" @click=\"setAlert\">\r\n                设置提醒\r\n              </button>\r\n            </div>\r\n            <div class=\"active-alerts\">\r\n              <div class=\"alert-item\" v-for=\"alert in activeAlerts\" :key=\"alert.id\">\r\n                <span>{{ alert.coin }} {{ alert.condition }} ${{ alert.price }}</span>\r\n                <button class=\"btn-delete\" @click=\"deleteAlert(alert.id)\">\r\n                  <i class=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <!-- 钱包监控演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>钱包监控演示</h2>\r\n        <div class=\"wallet-monitor\">\r\n          <div class=\"wallet-input\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"walletAddress\" \r\n              placeholder=\"输入钱包地址\"\r\n            >\r\n            <button class=\"btn btn-primary\" @click=\"addWallet\">\r\n              添加监控\r\n            </button>\r\n          </div>\r\n          <div class=\"wallet-list\">\r\n            <div class=\"wallet-card\" v-for=\"wallet in monitoredWallets\" :key=\"wallet.address\">\r\n              <div class=\"wallet-info\">\r\n                <h4>{{ wallet.address.substring(0, 6) }}...{{ wallet.address.substring(38) }}</h4>\r\n                <p>余额: {{ wallet.balance }} ETH</p>\r\n              </div>\r\n              <div class=\"wallet-transactions\">\r\n                <h5>最近交易</h5>\r\n                <div class=\"transaction\" v-for=\"tx in wallet.recentTx\" :key=\"tx.hash\">\r\n                  <span :class=\"tx.type\">{{ tx.type === 'in' ? '收入' : '支出' }}</span>\r\n                  <span>{{ tx.amount }} ETH</span>\r\n                  <span class=\"tx-time\">{{ tx.time }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <!-- Bot 演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>Telegram Bot 演示</h2>\r\n        <div class=\"bot-demo\">\r\n          <div class=\"bot-chat\">\r\n            <div class=\"chat-messages\">\r\n              <div \r\n                v-for=\"message in botMessages\" \r\n                :key=\"message.id\"\r\n                :class=\"['message', message.type]\"\r\n              >\r\n                {{ message.text }}\r\n                <span class=\"message-time\">{{ message.time }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chat-input\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"botCommand\" \r\n                placeholder=\"输入命令 (例如: /price ETH)\"\r\n                @keyup.enter=\"sendCommand\"\r\n              >\r\n              <button class=\"btn btn-primary\" @click=\"sendCommand\">\r\n                发送\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"bot-commands\">\r\n            <h3>可用命令</h3>\r\n            <ul>\r\n              <li v-for=\"command in botCommands\" :key=\"command.cmd\">\r\n                <code>{{ command.cmd }}</code>\r\n                <span>{{ command.description }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'DemoView',\r\n    data() {\r\n      return {\r\n        selectedCoin: 'ETH',\r\n        selectedRange: '24H',\r\n        coins: [\r\n          { id: 'ETH', name: '以太坊' },\r\n          { id: 'BTC', name: '比特币' },\r\n          { id: 'BNB', name: '币安币' }\r\n        ],\r\n        timeRanges: ['24H', '7D', '30D', '1Y'],\r\n        alertPrice: '',\r\n        alertCondition: 'above',\r\n        activeAlerts: [\r\n          { id: 1, coin: 'ETH', condition: '高于', price: '2000' },\r\n          { id: 2, coin: 'BTC', condition: '低于', price: '35000' }\r\n        ],\r\n        walletAddress: '',\r\n        monitoredWallets: [\r\n          {\r\n            address: '0x742d35Cc6634C0532925a3b844Bc454e4438f44e',\r\n            balance: '125.45',\r\n            recentTx: [\r\n              { hash: '0x123...', type: 'in', amount: '10.5', time: '10分钟前' },\r\n              { hash: '0x456...', type: 'out', amount: '5.2', time: '1小时前' }\r\n            ]\r\n          }\r\n        ],\r\n        botCommand: '',\r\n        botMessages: [\r\n          { id: 1, type: 'system', text: '欢迎使用 BlockAlert Bot!', time: '12:00' },\r\n          { id: 2, type: 'user', text: '/price ETH', time: '12:01' },\r\n          { id: 3, type: 'bot', text: 'ETH 当前价格: $1,850.45', time: '12:01' }\r\n        ],\r\n        botCommands: [\r\n          { cmd: '/price <币种>', description: '查询当前价格' },\r\n          { cmd: '/alert <币种> <价格>', description: '设置价格提醒' },\r\n          { cmd: '/wallet <地址>', description: '查询钱包信息' }\r\n        ]\r\n      }\r\n    },\r\n    methods: {\r\n      setAlert() {\r\n        if (!this.alertPrice) return\r\n        this.activeAlerts.push({\r\n          id: Date.now(),\r\n          coin: this.selectedCoin,\r\n          condition: this.alertCondition === 'above' ? '高于' : '低于',\r\n          price: this.alertPrice\r\n        })\r\n        this.alertPrice = ''\r\n      },\r\n      deleteAlert(id) {\r\n        this.activeAlerts = this.activeAlerts.filter(alert => alert.id !== id)\r\n      },\r\n      addWallet() {\r\n        if (!this.walletAddress) return\r\n        this.monitoredWallets.push({\r\n          address: this.walletAddress,\r\n          balance: '0.00',\r\n          recentTx: []\r\n        })\r\n        this.walletAddress = ''\r\n      },\r\n      sendCommand() {\r\n        if (!this.botCommand) return\r\n        this.botMessages.push({\r\n          id: Date.now(),\r\n          type: 'user',\r\n          text: this.botCommand,\r\n          time: new Date().toLocaleTimeString()\r\n        })\r\n        // 模拟机器人回复\r\n        setTimeout(() => {\r\n          this.botMessages.push({\r\n            id: Date.now(),\r\n            type: 'bot',\r\n            text: this.generateBotResponse(this.botCommand),\r\n            time: new Date().toLocaleTimeString()\r\n          })\r\n        }, 500)\r\n        this.botCommand = ''\r\n      },\r\n      generateBotResponse(command) {\r\n        if (command.startsWith('/price')) {\r\n          return `${command.split(' ')[1]} 当前价格: $${(Math.random() * 2000 + 1000).toFixed(2)}`\r\n        }\r\n        return '收到命令：' + command\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .demo-page {\r\n    padding-top: 60px;\r\n  }\r\n  \r\n  .demo-hero {\r\n    padding: 100px 5%;\r\n    text-align: center;\r\n    color: white;\r\n  }\r\n  \r\n  .demo-hero h1 {\r\n    font-size: 3rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .demo-section {\r\n    padding: 3rem 5%;\r\n  }\r\n  \r\n  .demo-section h2 {\r\n    margin-bottom: 2rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* 价格监控样式 */\r\n  .price-monitor {\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    gap: 2rem;\r\n  }\r\n  \r\n  .chart-container {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .chart-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .time-range button {\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .time-range button.active {\r\n    color: #3498db;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .chart-placeholder {\r\n    height: 300px;\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #666;\r\n  }\r\n  \r\n  .price-alerts {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .alert-form {\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .form-group label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .alert-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    background: #f8f9fa;\r\n    border-radius: 6px;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  /* 钱包监控样式 */\r\n  .wallet-monitor {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .wallet-input {\r\n    display: flex;\r\n    gap: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .wallet-input input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .wallet-card {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .wallet-transactions {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .transaction {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0.5rem 0;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  \r\n  .transaction .in {\r\n    color: #2ecc71;\r\n  }\r\n  \r\n  .transaction .out {\r\n    color: #e74c3c;\r\n  }\r\n  \r\n  /* Bot 演示样式 */\r\n  .bot-demo {\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    gap: 2rem;\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .bot-chat {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .chat-messages {\r\n    height: 400px;\r\n    padding: 1rem;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .message {\r\n    margin-bottom: 1rem;\r\n    padding: 0.8rem;\r\n    border-radius: 8px;\r\n    max-width: 80%;\r\n  }\r\n  \r\n  .message.system {\r\n    background: #f8f9fa;\r\n    text-align: center;\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .message.user {\r\n    background: #3498db;\r\n    color: white;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .message.bot {\r\n    background: #f8f9fa;\r\n  }\r\n  \r\n  .message-time {\r\n    font-size: 0.8rem;\r\n    opacity: 0.7;\r\n    display: block;\r\n    margin-top: 0.5rem;\r\n  }\r\n  \r\n  .chat-input {\r\n    padding: 1rem;\r\n    border-top: 1px solid #eee;\r\n    display: flex;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .chat-input input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .bot-commands {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .bot-commands h3 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .bot-commands ul {\r\n    list-style: none;\r\n  }\r\n  \r\n  .bot-commands li {\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .bot-commands code {\r\n    background: #f8f9fa;\r\n    padding: 0.3rem 0.6rem;\r\n    border-radius: 4px;\r\n    font-family: monospace;\r\n  }\r\n  \r\n  /* 响应式设计 */\r\n  @media (max-width: 1024px) {\r\n    .price-monitor {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .bot-demo {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .demo-hero h1 {\r\n      font-size: 2rem;\r\n    }\r\n    \r\n    .chart-header {\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n    }\r\n    \r\n    .wallet-input {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  \r\n  /* 动画效果 */\r\n  .fade-enter-active,\r\n  .fade-leave-active {\r\n    transition: opacity 0.3s;\r\n  }\r\n  \r\n  .fade-enter,\r\n  .fade-leave-to {\r\n    opacity: 0;\r\n  }\r\n  \r\n  /* 通用样式美化 */\r\n  input,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  input:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border-color: #3498db;\r\n  }\r\n  \r\n  .btn {\r\n    padding: 0.8rem 1.5rem;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    transition: all 0.3s;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background: #3498db;\r\n    color: white;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background: #2980b9;\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  .btn-delete {\r\n    background: none;\r\n    border: none;\r\n    color: #e74c3c;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n  }\r\n  \r\n  .btn-delete:hover {\r\n    color: #c0392b;\r\n  }\r\n  </style> "],"mappings":";;;;;;;;;;;AAgJA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA;MACAC,aAAA;MACAC,KAAA,GACA;QAAAC,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,EACA;MACAM,UAAA;MACAC,UAAA;MACAC,cAAA;MACAC,YAAA,GACA;QAAAJ,EAAA;QAAAK,IAAA;QAAAC,SAAA;QAAAC,KAAA;MAAA,GACA;QAAAP,EAAA;QAAAK,IAAA;QAAAC,SAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA;MACAC,gBAAA,GACA;QACAC,OAAA;QACAC,OAAA;QACAC,QAAA,GACA;UAAAC,IAAA;UAAAC,IAAA;UAAAC,MAAA;UAAAC,IAAA;QAAA,GACA;UAAAH,IAAA;UAAAC,IAAA;UAAAC,MAAA;UAAAC,IAAA;QAAA;MAEA,EACA;MACAC,UAAA;MACAC,WAAA,GACA;QAAAlB,EAAA;QAAAc,IAAA;QAAAK,IAAA;QAAAH,IAAA;MAAA,GACA;QAAAhB,EAAA;QAAAc,IAAA;QAAAK,IAAA;QAAAH,IAAA;MAAA,GACA;QAAAhB,EAAA;QAAAc,IAAA;QAAAK,IAAA;QAAAH,IAAA;MAAA,EACA;MACAI,WAAA,GACA;QAAAC,GAAA;QAAAC,WAAA;MAAA,GACA;QAAAD,GAAA;QAAAC,WAAA;MAAA,GACA;QAAAD,GAAA;QAAAC,WAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAA;MACA,UAAAtB,UAAA;MACA,KAAAE,YAAA,CAAAqB,IAAA;QACAzB,EAAA,EAAA0B,IAAA,CAAAC,GAAA;QACAtB,IAAA,OAAAR,YAAA;QACAS,SAAA,OAAAH,cAAA;QACAI,KAAA,OAAAL;MACA;MACA,KAAAA,UAAA;IACA;IACA0B,WAAA,WAAAA,YAAA5B,EAAA;MACA,KAAAI,YAAA,QAAAA,YAAA,CAAAyB,MAAA,WAAAC,KAAA;QAAA,OAAAA,KAAA,CAAA9B,EAAA,KAAAA,EAAA;MAAA;IACA;IACA+B,SAAA,WAAAA,UAAA;MACA,UAAAvB,aAAA;MACA,KAAAC,gBAAA,CAAAgB,IAAA;QACAf,OAAA,OAAAF,aAAA;QACAG,OAAA;QACAC,QAAA;MACA;MACA,KAAAJ,aAAA;IACA;IACAwB,WAAA,WAAAA,YAAA;MAAA,IAAAC,KAAA;MACA,UAAAhB,UAAA;MACA,KAAAC,WAAA,CAAAO,IAAA;QACAzB,EAAA,EAAA0B,IAAA,CAAAC,GAAA;QACAb,IAAA;QACAK,IAAA,OAAAF,UAAA;QACAD,IAAA,MAAAU,IAAA,GAAAQ,kBAAA;MACA;MACA;MACAC,UAAA;QACAF,KAAA,CAAAf,WAAA,CAAAO,IAAA;UACAzB,EAAA,EAAA0B,IAAA,CAAAC,GAAA;UACAb,IAAA;UACAK,IAAA,EAAAc,KAAA,CAAAG,mBAAA,CAAAH,KAAA,CAAAhB,UAAA;UACAD,IAAA,MAAAU,IAAA,GAAAQ,kBAAA;QACA;MACA;MACA,KAAAjB,UAAA;IACA;IACAmB,mBAAA,WAAAA,oBAAAC,OAAA;MACA,IAAAA,OAAA,CAAAC,UAAA;QACA,UAAAC,MAAA,CAAAF,OAAA,CAAAG,KAAA,0CAAAD,MAAA,EAAAE,IAAA,CAAAC,MAAA,kBAAAC,OAAA;MACA;MACA,iBAAAN,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}