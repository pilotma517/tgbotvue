{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/x/Desktop/tgbotvue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/x/Desktop/tgbotvue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport axios from 'axios';\nimport LightweightCharts from 'lightweight-charts';\nexport default {\n  name: 'DemoView',\n  data: function data() {\n    return {\n      selectedSymbol: 'BTCUSDT',\n      selectedInterval: '1m',\n      intervals: ['1m', '5m', '15m', '1h', '4h', '1d'],\n      chart: null,\n      candleSeries: null,\n      ws: null,\n      alertPrice: '',\n      alertCondition: 'above',\n      activeAlerts: [{\n        id: 1,\n        coin: 'ETH',\n        condition: '高于',\n        price: '2000'\n      }, {\n        id: 2,\n        coin: 'BTC',\n        condition: '低于',\n        price: '35000'\n      }],\n      walletAddress: '',\n      monitoredWallets: [{\n        address: '0x742d35Cc6634C0532925a3b844Bc454e4438f44e',\n        balance: '125.45',\n        recentTx: [{\n          hash: '0x123...',\n          type: 'in',\n          amount: '10.5',\n          time: '10分钟前'\n        }, {\n          hash: '0x456...',\n          type: 'out',\n          amount: '5.2',\n          time: '1小时前'\n        }]\n      }],\n      botCommand: '',\n      botMessages: [{\n        id: 1,\n        type: 'system',\n        text: '欢迎使用价格查询功能！',\n        time: new Date().toLocaleTimeString()\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n    this.fetchHistoricalData();\n    this.setupWebSocket();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.ws) {\n      this.ws.close();\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      // 创建图表\n      this.chart = LightweightCharts.createChart(this.$refs.chartContainer, {\n        width: 800,\n        height: 400,\n        layout: {\n          backgroundColor: '#ffffff',\n          textColor: '#333'\n        },\n        grid: {\n          vertLines: {\n            color: '#f0f0f0'\n          },\n          horzLines: {\n            color: '#f0f0f0'\n          }\n        },\n        crosshair: {\n          mode: LightweightCharts.CrosshairMode.Normal\n        },\n        timeScale: {\n          borderColor: '#f0f0f0'\n        }\n      });\n\n      // 创建蜡烛图系列\n      this.candleSeries = this.chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350'\n      });\n    },\n    fetchHistoricalData: function fetchHistoricalData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, candleData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://api.binance.com/api/v3/klines?symbol=\".concat(_this.selectedSymbol, \"&interval=\").concat(_this.selectedInterval, \"&limit=1000\"));\n            case 3:\n              response = _context.sent;\n              candleData = response.data.map(function (d) {\n                return {\n                  time: d[0] / 1000,\n                  open: parseFloat(d[1]),\n                  high: parseFloat(d[2]),\n                  low: parseFloat(d[3]),\n                  close: parseFloat(d[4])\n                };\n              });\n              _this.candleSeries.setData(candleData);\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取历史数据失败:', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    setupWebSocket: function setupWebSocket() {\n      var _this2 = this;\n      if (this.ws) {\n        this.ws.close();\n      }\n      var url = \"wss://stream.binance.com:9443/ws/\".concat(this.selectedSymbol.toLowerCase(), \"@kline_\").concat(this.selectedInterval);\n      // eslint-disable-next-line no-undef\n      this.ws = new window.WebSocket(url);\n      this.ws.onmessage = function (event) {\n        var data = JSON.parse(event.data);\n        var kline = data.k;\n        var time = kline.t / 1000;\n        var open = parseFloat(kline.o);\n        var high = parseFloat(kline.h);\n        var low = parseFloat(kline.l);\n        var close = parseFloat(kline.c);\n        var volume = parseFloat(kline.v);\n\n        // 添加 null 检查\n        if (_this2.chart && _this2.candleSeries) {\n          _this2.candleSeries.update({\n            time: time,\n            open: open,\n            high: high,\n            low: low,\n            close: close,\n            volume: volume\n          });\n        }\n        console.log('Chart:', _this2.chart);\n        console.log('Series:', _this2.candleSeries);\n        console.log('Kline data:', {\n          time: time,\n          open: open,\n          high: high,\n          low: low,\n          close: close,\n          volume: volume\n        });\n      };\n    },\n    changeInterval: function changeInterval(interval) {\n      this.selectedInterval = interval;\n      this.fetchHistoricalData();\n      this.setupWebSocket();\n    },\n    setAlert: function setAlert() {\n      if (!this.alertPrice) return;\n      this.activeAlerts.push({\n        id: Date.now(),\n        coin: this.selectedSymbol,\n        condition: this.alertCondition === 'above' ? '高于' : '低于',\n        price: this.alertPrice\n      });\n      this.alertPrice = '';\n    },\n    deleteAlert: function deleteAlert(id) {\n      this.activeAlerts = this.activeAlerts.filter(function (alert) {\n        return alert.id !== id;\n      });\n    },\n    addWallet: function addWallet() {\n      if (!this.walletAddress) return;\n      this.monitoredWallets.push({\n        address: this.walletAddress,\n        balance: '0.00',\n        recentTx: []\n      });\n      this.walletAddress = '';\n    },\n    sendCommand: function sendCommand() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var symbol, response, _error$response, errorMessage;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this3.botCommand) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _this3.addMessage('user', _this3.botCommand);\n              if (!_this3.botCommand.startsWith('/price')) {\n                _context2.next = 23;\n                break;\n              }\n              symbol = _this3.botCommand.split(' ')[1];\n              if (symbol) {\n                _context2.next = 9;\n                break;\n              }\n              _this3.addMessage('bot', '请输入币种符号，例如: /price BTC');\n              _context2.next = 21;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _this3.addMessage('bot', \"\\u6B63\\u5728\\u67E5\\u8BE2 \".concat(symbol, \" \\u7684\\u4EF7\\u683C...\"));\n              _context2.next = 13;\n              return axios.get(\"http://localhost:3000/api/price/\".concat(symbol));\n            case 13:\n              response = _context2.sent;\n              _this3.addMessage('bot', \"\".concat(symbol, \" \\u5F53\\u524D\\u4EF7\\u683C: $\").concat(response.data.price));\n              _context2.next = 21;\n              break;\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](9);\n              errorMessage = ((_error$response = _context2.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || '获取价格失败，请稍后重试';\n              _this3.addMessage('bot', errorMessage);\n            case 21:\n              _context2.next = 24;\n              break;\n            case 23:\n              _this3.addMessage('bot', '未知命令，请使用 /price 币种 查询价格');\n            case 24:\n              _this3.botCommand = '';\n              _this3.$nextTick(function () {\n                var chatMessages = _this3.$refs.chatMessages;\n                chatMessages.scrollTop = chatMessages.scrollHeight;\n              });\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[9, 17]]);\n      }))();\n    },\n    addMessage: function addMessage(type, text) {\n      this.botMessages.push({\n        id: Date.now(),\n        type: type,\n        text: text,\n        time: new Date().toLocaleTimeString()\n      });\n    }\n  },\n  watch: {\n    selectedSymbol: function selectedSymbol() {\n      this.fetchHistoricalData();\n      this.setupWebSocket();\n    }\n  }\n};","map":{"version":3,"names":["axios","LightweightCharts","name","data","selectedSymbol","selectedInterval","intervals","chart","candleSeries","ws","alertPrice","alertCondition","activeAlerts","id","coin","condition","price","walletAddress","monitoredWallets","address","balance","recentTx","hash","type","amount","time","botCommand","botMessages","text","Date","toLocaleTimeString","mounted","initChart","fetchHistoricalData","setupWebSocket","beforeUnmount","close","methods","createChart","$refs","chartContainer","width","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","CrosshairMode","Normal","timeScale","borderColor","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","candleData","wrap","_callee$","_context","prev","next","get","concat","sent","map","d","open","parseFloat","high","low","setData","t0","console","error","stop","_this2","url","toLowerCase","window","WebSocket","onmessage","event","JSON","parse","kline","k","t","o","h","l","c","volume","v","update","log","changeInterval","interval","setAlert","push","now","deleteAlert","filter","alert","addWallet","sendCommand","_this3","_callee2","symbol","_error$response","errorMessage","_callee2$","_context2","abrupt","addMessage","startsWith","split","message","$nextTick","chatMessages","scrollTop","scrollHeight","watch"],"sources":["src/views/DemoView.vue"],"sourcesContent":["<template>\r\n    <div class=\"demo-page\">\r\n      <!-- 演示页面头部 -->\r\n      <section class=\"demo-hero gradient-bg\">\r\n        <h1>实时演示</h1>\r\n        <p>体验我们的区块链监控系统</p>\r\n      </section>\r\n  \r\n      <!-- 价格监控演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>价格监控演示</h2>\r\n        <div class=\"price-monitor\">\r\n          <div class=\"chart-container\">\r\n            <div class=\"chart-header\">\r\n              <select v-model=\"selectedSymbol\">\r\n                <option value=\"BTCUSDT\">BTC/USDT</option>\r\n                <option value=\"ETHUSDT\">ETH/USDT</option>\r\n                <option value=\"BNBUSDT\">BNB/USDT</option>\r\n              </select>\r\n              <div class=\"time-range\">\r\n                <button \r\n                  v-for=\"interval in intervals\" \r\n                  :key=\"interval\"\r\n                  :class=\"{ active: selectedInterval === interval }\"\r\n                  @click=\"changeInterval(interval)\"\r\n                >\r\n                  {{ interval }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div id=\"chart\" ref=\"chartContainer\"></div>\r\n          </div>\r\n          <div class=\"price-alerts\">\r\n            <h3>价格提醒</h3>\r\n            <div class=\"alert-form\">\r\n              <div class=\"form-group\">\r\n                <label>价格阈值</label>\r\n                <input type=\"number\" v-model=\"alertPrice\" placeholder=\"输入价格\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>条件</label>\r\n                <select v-model=\"alertCondition\">\r\n                  <option value=\"above\">高于</option>\r\n                  <option value=\"below\">低于</option>\r\n                </select>\r\n              </div>\r\n              <button class=\"btn btn-primary\" @click=\"setAlert\">\r\n                设置提醒\r\n              </button>\r\n            </div>\r\n            <div class=\"active-alerts\">\r\n              <div class=\"alert-item\" v-for=\"alert in activeAlerts\" :key=\"alert.id\">\r\n                <span>{{ alert.coin }} {{ alert.condition }} ${{ alert.price }}</span>\r\n                <button class=\"btn-delete\" @click=\"deleteAlert(alert.id)\">\r\n                  <i class=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <!-- 钱包监控演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>钱包监控演示</h2>\r\n        <div class=\"wallet-monitor\">\r\n          <div class=\"wallet-input\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"walletAddress\" \r\n              placeholder=\"输入钱包地址\"\r\n            >\r\n            <button class=\"btn btn-primary\" @click=\"addWallet\">\r\n              添加监控\r\n            </button>\r\n          </div>\r\n          <div class=\"wallet-list\">\r\n            <div class=\"wallet-card\" v-for=\"wallet in monitoredWallets\" :key=\"wallet.address\">\r\n              <div class=\"wallet-info\">\r\n                <h4>{{ wallet.address.substring(0, 6) }}...{{ wallet.address.substring(38) }}</h4>\r\n                <p>余额: {{ wallet.balance }} ETH</p>\r\n              </div>\r\n              <div class=\"wallet-transactions\">\r\n                <h5>最近交易</h5>\r\n                <div class=\"transaction\" v-for=\"tx in wallet.recentTx\" :key=\"tx.hash\">\r\n                  <span :class=\"tx.type\">{{ tx.type === 'in' ? '收入' : '支出' }}</span>\r\n                  <span>{{ tx.amount }} ETH</span>\r\n                  <span class=\"tx-time\">{{ tx.time }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <!-- Bot 演示 -->\r\n      <section class=\"demo-section\">\r\n        <h2>价格查询演示</h2>\r\n        <div class=\"bot-demo\">\r\n          <div class=\"bot-chat\">\r\n            <div class=\"chat-messages\" ref=\"chatMessages\">\r\n              <div \r\n                v-for=\"message in botMessages\" \r\n                :key=\"message.id\"\r\n                :class=\"['message', message.type]\"\r\n              >\r\n                {{ message.text }}\r\n                <span class=\"message-time\">{{ message.time }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chat-input\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"botCommand\" \r\n                placeholder=\"输入命令 (例如: /price BTC)\"\r\n                @keyup.enter=\"sendCommand\"\r\n              >\r\n              <button class=\"btn btn-primary\" @click=\"sendCommand\">\r\n                发送\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"bot-commands\">\r\n            <h3>可用命令</h3>\r\n            <ul>\r\n              <li>\r\n                <code>/price 币种</code>\r\n                <span>查询当前价格 (例如: /price BTC)</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import LightweightCharts from 'lightweight-charts';\r\n  \r\n  export default {\r\n    name: 'DemoView',\r\n    data() {\r\n      return {\r\n        selectedSymbol: 'BTCUSDT',\r\n        selectedInterval: '1m',\r\n        intervals: ['1m', '5m', '15m', '1h', '4h', '1d'],\r\n        chart: null,\r\n        candleSeries: null,\r\n        ws: null,\r\n        alertPrice: '',\r\n        alertCondition: 'above',\r\n        activeAlerts: [\r\n          { id: 1, coin: 'ETH', condition: '高于', price: '2000' },\r\n          { id: 2, coin: 'BTC', condition: '低于', price: '35000' }\r\n        ],\r\n        walletAddress: '',\r\n        monitoredWallets: [\r\n          {\r\n            address: '0x742d35Cc6634C0532925a3b844Bc454e4438f44e',\r\n            balance: '125.45',\r\n            recentTx: [\r\n              { hash: '0x123...', type: 'in', amount: '10.5', time: '10分钟前' },\r\n              { hash: '0x456...', type: 'out', amount: '5.2', time: '1小时前' }\r\n            ]\r\n          }\r\n        ],\r\n        botCommand: '',\r\n        botMessages: [\r\n          {\r\n            id: 1,\r\n            type: 'system',\r\n            text: '欢迎使用价格查询功能！',\r\n            time: new Date().toLocaleTimeString()\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initChart()\r\n      this.fetchHistoricalData()\r\n      this.setupWebSocket()\r\n    },\r\n    beforeUnmount() {\r\n      if (this.ws) {\r\n        this.ws.close();\r\n      }\r\n    },\r\n    methods: {\r\n      initChart() {\r\n        // 创建图表\r\n        this.chart = LightweightCharts.createChart(this.$refs.chartContainer, {\r\n          width: 800,\r\n          height: 400,\r\n          layout: {\r\n            backgroundColor: '#ffffff',\r\n            textColor: '#333',\r\n          },\r\n          grid: {\r\n            vertLines: {\r\n              color: '#f0f0f0',\r\n            },\r\n            horzLines: {\r\n              color: '#f0f0f0',\r\n            },\r\n          },\r\n          crosshair: {\r\n            mode: LightweightCharts.CrosshairMode.Normal,\r\n          },\r\n          timeScale: {\r\n            borderColor: '#f0f0f0',\r\n          },\r\n        });\r\n\r\n        // 创建蜡烛图系列\r\n        this.candleSeries = this.chart.addCandlestickSeries({\r\n          upColor: '#26a69a',\r\n          downColor: '#ef5350',\r\n          borderVisible: false,\r\n          wickUpColor: '#26a69a',\r\n          wickDownColor: '#ef5350',\r\n        });\r\n      },\r\n\r\n      async fetchHistoricalData() {\r\n        try {\r\n          const response = await axios.get(\r\n            `https://api.binance.com/api/v3/klines?symbol=${this.selectedSymbol}&interval=${this.selectedInterval}&limit=1000`\r\n          );\r\n\r\n          const candleData = response.data.map(d => ({\r\n            time: d[0] / 1000,\r\n            open: parseFloat(d[1]),\r\n            high: parseFloat(d[2]),\r\n            low: parseFloat(d[3]),\r\n            close: parseFloat(d[4])\r\n          }));\r\n\r\n          this.candleSeries.setData(candleData);\r\n        } catch (error) {\r\n          console.error('获取历史数据失败:', error);\r\n        }\r\n      },\r\n\r\n      setupWebSocket() {\r\n        if (this.ws) {\r\n          this.ws.close();\r\n        }\r\n\r\n        const url = `wss://stream.binance.com:9443/ws/${this.selectedSymbol.toLowerCase()}@kline_${this.selectedInterval}`;\r\n        // eslint-disable-next-line no-undef\r\n        this.ws = new window.WebSocket(url);\r\n\r\n        this.ws.onmessage = (event) => {\r\n          const data = JSON.parse(event.data)\r\n          const kline = data.k\r\n          const time = kline.t / 1000\r\n          const open = parseFloat(kline.o)\r\n          const high = parseFloat(kline.h)\r\n          const low = parseFloat(kline.l)\r\n          const close = parseFloat(kline.c)\r\n          const volume = parseFloat(kline.v)\r\n\r\n          // 添加 null 检查\r\n          if (this.chart && this.candleSeries) {\r\n            this.candleSeries.update({\r\n              time,\r\n              open,\r\n              high,\r\n              low,\r\n              close,\r\n              volume\r\n            })\r\n          }\r\n\r\n          console.log('Chart:', this.chart)\r\n          console.log('Series:', this.candleSeries)\r\n          console.log('Kline data:', {\r\n            time,\r\n            open,\r\n            high,\r\n            low,\r\n            close,\r\n            volume\r\n          })\r\n        };\r\n      },\r\n\r\n      changeInterval(interval) {\r\n        this.selectedInterval = interval;\r\n        this.fetchHistoricalData();\r\n        this.setupWebSocket();\r\n      },\r\n      setAlert() {\r\n        if (!this.alertPrice) return\r\n        this.activeAlerts.push({\r\n          id: Date.now(),\r\n          coin: this.selectedSymbol,\r\n          condition: this.alertCondition === 'above' ? '高于' : '低于',\r\n          price: this.alertPrice\r\n        })\r\n        this.alertPrice = ''\r\n      },\r\n      deleteAlert(id) {\r\n        this.activeAlerts = this.activeAlerts.filter(alert => alert.id !== id)\r\n      },\r\n      addWallet() {\r\n        if (!this.walletAddress) return\r\n        this.monitoredWallets.push({\r\n          address: this.walletAddress,\r\n          balance: '0.00',\r\n          recentTx: []\r\n        })\r\n        this.walletAddress = ''\r\n      },\r\n      async sendCommand() {\r\n        if (!this.botCommand) return;\r\n\r\n        this.addMessage('user', this.botCommand);\r\n\r\n        if (this.botCommand.startsWith('/price')) {\r\n          const symbol = this.botCommand.split(' ')[1];\r\n          if (!symbol) {\r\n            this.addMessage('bot', '请输入币种符号，例如: /price BTC');\r\n          } else {\r\n            try {\r\n              this.addMessage('bot', `正在查询 ${symbol} 的价格...`);\r\n              const response = await axios.get(`http://localhost:3000/api/price/${symbol}`);\r\n              this.addMessage('bot', `${symbol} 当前价格: $${response.data.price}`);\r\n            } catch (error) {\r\n              const errorMessage = error.response?.data?.message || '获取价格失败，请稍后重试';\r\n              this.addMessage('bot', errorMessage);\r\n            }\r\n          }\r\n        } else {\r\n          this.addMessage('bot', '未知命令，请使用 /price 币种 查询价格');\r\n        }\r\n\r\n        this.botCommand = '';\r\n        \r\n        this.$nextTick(() => {\r\n          const chatMessages = this.$refs.chatMessages;\r\n          chatMessages.scrollTop = chatMessages.scrollHeight;\r\n        });\r\n      },\r\n      addMessage(type, text) {\r\n        this.botMessages.push({\r\n          id: Date.now(),\r\n          type,\r\n          text,\r\n          time: new Date().toLocaleTimeString()\r\n        });\r\n      }\r\n    },\r\n    watch: {\r\n      selectedSymbol() {\r\n        this.fetchHistoricalData();\r\n        this.setupWebSocket();\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .demo-page {\r\n    padding-top: 60px;\r\n  }\r\n  \r\n  .demo-hero {\r\n    padding: 100px 5%;\r\n    text-align: center;\r\n    color: white;\r\n  }\r\n  \r\n  .demo-hero h1 {\r\n    font-size: 3rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .demo-section {\r\n    padding: 3rem 5%;\r\n  }\r\n  \r\n  .demo-section h2 {\r\n    margin-bottom: 2rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* 价格监控样式 */\r\n  .price-monitor {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .chart-container {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .chart-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  select {\r\n    padding: 8px;\r\n    border-radius: 6px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .time-range {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .time-range button {\r\n    padding: 8px 16px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    background: white;\r\n    cursor: pointer;\r\n    transition: all 0.3s;\r\n  }\r\n  \r\n  .time-range button.active {\r\n    background: #3498db;\r\n    color: white;\r\n    border-color: #3498db;\r\n  }\r\n  \r\n  #chart {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .price-alerts {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .alert-form {\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .form-group label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .alert-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    background: #f8f9fa;\r\n    border-radius: 6px;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  /* 钱包监控样式 */\r\n  .wallet-monitor {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .wallet-input {\r\n    display: flex;\r\n    gap: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .wallet-input input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .wallet-card {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .wallet-transactions {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .transaction {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0.5rem 0;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  \r\n  .transaction .in {\r\n    color: #2ecc71;\r\n  }\r\n  \r\n  .transaction .out {\r\n    color: #e74c3c;\r\n  }\r\n  \r\n  /* Bot 演示样式 */\r\n  .bot-demo {\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    gap: 2rem;\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .bot-chat {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .chat-messages {\r\n    height: 400px;\r\n    padding: 1rem;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .message {\r\n    margin-bottom: 1rem;\r\n    padding: 0.8rem;\r\n    border-radius: 8px;\r\n    max-width: 80%;\r\n  }\r\n  \r\n  .message.system {\r\n    background: #f8f9fa;\r\n    text-align: center;\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .message.user {\r\n    background: #3498db;\r\n    color: white;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .message.bot {\r\n    background: #f8f9fa;\r\n  }\r\n  \r\n  .message-time {\r\n    font-size: 0.8rem;\r\n    opacity: 0.7;\r\n    display: block;\r\n    margin-top: 0.5rem;\r\n  }\r\n  \r\n  .chat-input {\r\n    padding: 1rem;\r\n    border-top: 1px solid #eee;\r\n    display: flex;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .chat-input input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .bot-commands {\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .bot-commands h3 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .bot-commands ul {\r\n    list-style: none;\r\n  }\r\n  \r\n  .bot-commands li {\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .bot-commands code {\r\n    background: #f8f9fa;\r\n    padding: 0.3rem 0.6rem;\r\n    border-radius: 4px;\r\n    font-family: monospace;\r\n  }\r\n  \r\n  /* 响应式设计 */\r\n  @media (max-width: 1024px) {\r\n    .price-monitor {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .bot-demo {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .demo-hero h1 {\r\n      font-size: 2rem;\r\n    }\r\n    \r\n    .chart-header {\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n    }\r\n    \r\n    .wallet-input {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  \r\n  /* 动画效果 */\r\n  .fade-enter-active,\r\n  .fade-leave-active {\r\n    transition: opacity 0.3s;\r\n  }\r\n  \r\n  .fade-enter,\r\n  .fade-leave-to {\r\n    opacity: 0;\r\n  }\r\n  \r\n  /* 通用样式美化 */\r\n  input,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  input:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border-color: #3498db;\r\n  }\r\n  \r\n  .btn {\r\n    padding: 0.8rem 1.5rem;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    transition: all 0.3s;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background: #3498db;\r\n    color: white;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background: #2980b9;\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  .btn-delete {\r\n    background: none;\r\n    border: none;\r\n    color: #e74c3c;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n  }\r\n  \r\n  .btn-delete:hover {\r\n    color: #c0392b;\r\n  }\r\n  </style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}